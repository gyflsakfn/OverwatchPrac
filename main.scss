// SCSS Refactoring
$url: "https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images";

body {
  width: auto;
  height: 100vh;
  /*보이는 뷰포트 높이를 100% 다 쓰겠다는 의미*/
  background-image: url("#{$url}/bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  /* 배경을 뷰포트에 대해 고정합니다. 요소에 스크롤이 존재해도 배경은 함께 스크롤되지 않습니다. */
}

.container {
  padding: 50px 0;

  .heroes {
    display: flex;
    /*수평으로 정렬*/
    flex-wrap: wrap;
    /*정렬된 블록들을 블록의 크기에 맞게 위치시킨다. 넘치면 다음 줄로*/
    justify-content: center;
    /*블록들을 가운데로 정렬한다.*/
    max-width: 700px;
    /* 블록 요소에 가로사이즈가 있는 상태에서 마진 값에 
    좌우가 auto라면 가운데 정렬됨(조건:블록요소, 가로사이즈 명시) */
    margin: 0 auto;
    padding: 40px 20px;

    .hero {
      width: 80px;
      height: 84px;
      margin: 4px;
      border: 3px solid #fff;
      border-radius: 10px;
      box-sizing: border-box;
      /* 보더로 인한 크기 증가X */
      background-color: #555;
      overflow: hidden;
      /* 넘치는 이미지 자름 */
      transform: skewX(-14deg);
      /*-14도 만큼 기울임*/
      transition:
        transform 1s,
        /*호버의 transform 기능을 1초 동안 변환*/
        background-color .6s;

      /*배경 색상을 .6초 동안 변환*/
      &:hover {
        /* & 상위 선택자인 hero클래스 지칭 */
        background-color: #ff9c00;
        transform: skewX(-14deg) scale(1.3);
        z-index: 1;
      }

      .image {
        // .hero의 후손 선택자로 읽힘
        width: 140%;
        height: 100%;
        background-position: center;
        /*이미지의 위치 중간*/
        background-size: 90px;
        background-repeat: no-repeat;
        transform: skew(14deg) translateX(-16px);
        /* 부모 요소가 -14도 기울어져 있어서 */
      }

      @for $i from 1 through 32 {

        // .hero
        &:nth-child(#{$i}) .image {
          background-image: url("#{$url}/hero#{$i}.png");
        }
      }
    }
  }
  .logo {
    // logo는 hero의 형제요소
    max-width: 300px;
    margin: 0 auto;
    padding: 0 20px;
    img {
      width: 100%;
    }
  }
}